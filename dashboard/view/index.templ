package view

templ IndexPage(timestamps []string, trumpPopularity []int) {
	<!DOCTYPE html>
	<html>
		<head>
			<!-- Required meta tags -->
			<meta charset="utf-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<title>USA 2024 election prediction</title>
			<!--Chart.js JS CDN-->
			<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.bundle.min.js"></script>
			<!--htmx JS CDN-->
			<script src="https://unpkg.com/htmx.org@2.0.2"></script>
		</head>
		<body>
			@Chart(timestamps, trumpPopularity)
		</body>
	</html>
}

templ ScriptData(timestamps []string, trumpPopularity []int) {
	<div hx-get="/chart" hx-trigger="every 1000ms" hx-swap="outerHTML">
		<script type="text/javascript" id="dataScript" timestamps={ templ.JSONString(timestamps) } trumpPopularity={ templ.JSONString(trumpPopularity) }>
		</script>
	</div>
}

templ Chart(timestamps []string, trumpPopularity []int) {
	<canvas id="myChart"></canvas>
	@ScriptData(timestamps, trumpPopularity)
	<script type="text/javascript">
	//iterrate and print trumpPopularity

	var ctx = document.getElementById('myChart').getContext('2d');
	var myChart = new Chart(ctx, {
		type: 'line',
		data: {
			labels: [],
			datasets: [{
				data: [],
				label: "Trump",
				borderColor: "rgb(227,17,17)",
				backgroundColor: "rgb(227,17,17,0.1)",
			}, {
				data: [],
				label: "Harris",
				borderColor: "rgb(62,149,205)",
				backgroundColor: "rgb(62,149,205,0.1)",
			}
			]
		},
		options: {
			animation: {
				duration: 0
			},
			scales: {
				yAxes: [{
					stacked: true
				}]
			}
		},
	});


	function updateChart() {
		var scriptTag = document.getElementById('dataScript');

		// Parsing attributes from the script tag
		var timestamps = JSON.parse(scriptTag.getAttribute('timestamps'));
		var trumpPopularity = JSON.parse(scriptTag.getAttribute('trumpPopularity'));
		var harrisPopularity = trumpPopularity.map(x => 100 - x);

		//Update the chart object
		myChart.data.labels = timestamps;
		myChart.data.datasets[0].data = trumpPopularity;
		myChart.data.datasets[1].data = harrisPopularity;
		console.log(myChart.data.datasets[0].data.length);

		//Update the chart
		myChart.update();

	}
	updateChart()
	setInterval(function () {
		updateChart()
		console.log("update")
	}, 1000);

</script>
}
